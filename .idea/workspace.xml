<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="34b4024d-b47f-4961-9cbf-9423904aff70" name="Changes" comment="删除idea 配置">
      <change afterPath="$PROJECT_DIR$/Makefile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/README-Protection-Migration.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/proto/user/user.pb.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/proto/user/user_grpc.pb.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/GRPC_INTEGRATION_SUMMARY.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/GRPC_TRACING.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/README-gRPC.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/RESOURCE_NAMING_CONVENTION.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/examples/grpc-client/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/grpc/user_service.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/grpc/config.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/grpc/server.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/middleware/common.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/middleware/grpc.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/middleware/http.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/middleware/sentinel.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/protection/sentinel.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/proto/user/user.proto" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/README_API_Protection_Test.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/README_GRPC_Rate_Limit_Test.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/README_Test_Suite_Overview.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/api_protection_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/demo_api_test.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/grpc_mapping_fixed_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/grpc_rate_limit_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/grpc_service_impl.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/order_service_impl.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/run_api_test.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/wildcard_example_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/user/user.pb.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/user/user_grpc.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README-Docker.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/README-Docker.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/config/config-docker.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/config/config-docker.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/config/config.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/config/config.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/deploy.sh" beforeDir="false" afterPath="$PROJECT_DIR$/deploy.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/RATELIMIT-CIRCUITBREAKER.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/RATELIMIT-SUMMARY.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/docs.go" beforeDir="false" afterPath="$PROJECT_DIR$/docs/docs.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/swagger.json" beforeDir="false" afterPath="$PROJECT_DIR$/docs/swagger.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/swagger.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/docs/swagger.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/api/router.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/api/router.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/circuitbreaker/hystrix.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/config/config.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/config/config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/logger/logger.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/logger/logger.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/metrics/prometheus.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/metrics/prometheus.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/ratelimit/factory.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/ratelimit/limiter.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/ratelimit/redis_limiter.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/tracing/tracer.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/tracing/tracer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/scripts/setup-dev.sh" beforeDir="false" afterPath="$PROJECT_DIR$/scripts/setup-dev.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/scripts/test-ratelimit-circuitbreaker.sh" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/scripts/test-ratelimit.sh" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.24.3.darwin-arm64" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GithubDefaultAccount">
    <option name="defaultAccountId" value="a0e93ca2-ec92-4180-81e1-8d76dca8929d" />
  </component>
  <component name="GoVcsConfiguration">
    <option name="GO_FMT" value="false" />
  </component>
  <component name="KubernetesApiPersistence"><![CDATA[{}]]></component>
  <component name="KubernetesApiProvider"><![CDATA[{
  "isMigrated": true
}]]></component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2xWzNPIrqtqA3LVWvmRM1QEAc5s" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "Go Build.go build distributed-service.executor": "Debug",
    "Go Build.go build distributed-service/examples/grpc-client.executor": "Run",
    "Go Build.go build distributed-service/examples/simple-api.executor": "Run",
    "Go Build.go build distributed-service/examples/unified_protection_demo.executor": "Run",
    "Go Test.TestAPIProtectionWithRealConfig/TestAuthAPICircuitBreaker in distributed-service/test.executor": "Run",
    "Go Test.TestAPIProtectionWithRealConfig/TestUsersAPICircuitBreaker in distributed-service/test.executor": "Run",
    "Go Test.TestFixedGRPCMapping in distributed-service/test.executor": "Run",
    "Go Test.TestGRPCRateLimitWithClient in distributed-service/test.executor": "Debug",
    "Go Test.TestGRPCWildcardMatching in distributed-service/test.executor": "Run",
    "Go Test.TestUnifiedCircuitBreaker in distributed-service/pkg/protection.executor": "Run",
    "Go Test.TestWildcardMatchingExample in distributed-service/test.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "git-widget-placeholder": "main",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "/Users/caomaoboy/GolandProjects/distributed-service",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "run.configurations.included.in.services": "true",
    "settings.editor.selected.configurable": "go.vgo"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/docs" />
      <recent name="$PROJECT_DIR$" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="GoApplicationRunConfiguration" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="Go Test.TestAPIProtectionWithRealConfig/TestUsersAPICircuitBreaker in distributed-service/test">
    <configuration name="go build distributed-service" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="distributed-service" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="distributed-service" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="TestAPIProtectionWithRealConfig/TestAuthAPICircuitBreaker in distributed-service/test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="distributed-service" />
      <working_directory value="$PROJECT_DIR$/test" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="distributed-service/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestAPIProtectionWithRealConfig\E$/^\QTestAuthAPICircuitBreaker\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestAPIProtectionWithRealConfig/TestUsersAPICircuitBreaker in distributed-service/test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="distributed-service" />
      <working_directory value="$PROJECT_DIR$/test" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="distributed-service/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestAPIProtectionWithRealConfig\E$/^\QTestUsersAPICircuitBreaker\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestGRPCRateLimitWithClient in distributed-service/test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="distributed-service" />
      <working_directory value="$PROJECT_DIR$/test" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="distributed-service/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGRPCRateLimitWithClient\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestWildcardMatchingExample in distributed-service/test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="distributed-service" />
      <working_directory value="$PROJECT_DIR$/test" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="distributed-service/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestWildcardMatchingExample\E$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestAPIProtectionWithRealConfig/TestUsersAPICircuitBreaker in distributed-service/test" />
        <item itemvalue="Go Test.TestAPIProtectionWithRealConfig/TestAuthAPICircuitBreaker in distributed-service/test" />
        <item itemvalue="Go Build.go build distributed-service" />
        <item itemvalue="Go Test.TestGRPCRateLimitWithClient in distributed-service/test" />
        <item itemvalue="Go Test.TestWildcardMatchingExample in distributed-service/test" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-d297c17c1fbd-85c80fddc9a6-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-243.23654.166" />
        <option value="bundled-js-predefined-d6986cc7102b-822845ee3bb5-JavaScript-GO-243.23654.166" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT" value="false" />
    <option name="CHECK_NEW_TODO" value="false" />
    <MESSAGE value="删除无关目录" />
    <MESSAGE value="删除idea 配置" />
    <option name="LAST_COMMIT_MESSAGE" value="删除idea 配置" />
    <option name="NON_MODAL_COMMIT_POSTPONE_SLOW_CHECKS" value="false" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/pkg/protection/sentinel.go</url>
          <line>429</line>
          <option name="timeStamp" value="68" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>