syntax = "proto3";

package user.v1;

option go_package = "distributed-service/api/proto/user";

import "google/protobuf/timestamp.proto";

// User message definition
message User {
  int64 id = 1;
  string username = 2;
  string email = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp updated_at = 5;
}

// Request messages
message GetUserRequest {
  int64 id = 1;
}

message CreateUserRequest {
  string username = 1;
  string email = 2;
  string password = 3;
}

message UpdateUserRequest {
  int64 id = 1;
  string username = 2;
  string email = 3;
}

message DeleteUserRequest {
  int64 id = 1;
}

message ListUsersRequest {
  int32 page_size = 1;
  int32 page_number = 2;
}

message LoginRequest {
  string username = 1;
  string password = 2;
}

// Response messages
message GetUserResponse {
  User user = 1;
}

message CreateUserResponse {
  User user = 1;
}

message UpdateUserResponse {
  User user = 1;
}

message DeleteUserResponse {
  bool success = 1;
  string message = 2;
}

message ListUsersResponse {
  repeated User users = 1;
  int32 total_count = 2;
  int32 page_size = 3;
  int32 page_number = 4;
}

message LoginResponse {
  string access_token = 1;
  string refresh_token = 2;
  User user = 3;
}

// Health check messages
message HealthCheckRequest {
  string service = 1;
}

message HealthCheckResponse {
  enum ServingStatus {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
    SERVICE_UNKNOWN = 3;
  }
  ServingStatus status = 1;
}

// UserService definition
service UserService {
  // User management
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
  
  // Authentication
  rpc Login(LoginRequest) returns (LoginResponse);
  
  // Health check
  rpc Check(HealthCheckRequest) returns (HealthCheckResponse);
} 